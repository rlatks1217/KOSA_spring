<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- 자동주입방식 -->
<bean id="myObj" class="springIoc.sample9.TestBean" autowire="byType"></bean>
<!--
autowire="byType"은 해당 Bean(여기서 의미하는 Bean은 myObj)의 필드의 데이터 타입과 같은 클래스를 가지고 있는 Bean을 주입해줌
byType으로 썼을 때 해당 Bean의 클래스 타입(지금은 DataBean)의 Bean이 여러 개 있으면 어떤 Bean을 넣어줘야 하는지 구분하지 못해서 에러 남  -> primary 속성 이용
원래 이렇게 Type으로 주입을 하는 것이 기본임
-->

<bean id="data1" class="springIoc.sample9.DataBean" primary="true" scope="prototype"/>
<!-- 
primary="true"속성을 사용하면  같은 클래스타입이 여러 개 있더라도 이 속성이 있는 Bean만 주입하게 됨
주입되는 Bean의 scope가 prototype이라면 주입받는 Bean이 만들어지는 시점에 생성되고 주입됨 + 여러 필드에 주입될 경우 주입될 때마다 새로 생성된 Bean이 주입됨
(getBean했을 때만 Bean이 만들어지는 것이 아니라는 것을 알 수 있음 + scope가 default인 singleton이라면 같은 Bean이 계속 주입됨)
-->
<bean id="data2" class="springIoc.sample9.DataBean"  />

</beans>

<!-- 
이 XML 파일은 설정파일이기 때문에 Application Context가 일단으 이 파일을 모두 읽고 만들기 시작해서 코드의 위치는 상관없음
즉, 주입되는 Bean이 만들어지는 코드가 주입받는 Bean의 코드보다 아래 있어도 상관없다는 얘기
 -->